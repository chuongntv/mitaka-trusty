########## Environment ##########

### Repo & Packages ###
dpkg --remove-architecture i386
apt-get update
apt-get install ubuntu-cloud-keyring
apt-get update
apt-get remove -y linux-generic-lts-wily linux-headers-generic-lts-wily linux-image-generic-lts-wily
apt-get install -y linux-generic-lts-xenial linux-headers-generic-lts-xenial linux-image-generic-lts-xenial
apt-get install software-properties-common
add-apt-repository cloud-archive:mitaka
apt-get upgrade -y
apt-get install -y ntp python-openstackclient

### Hosts Maping ###
sed -i '/127.0.1.1/d' /etc/hosts
echo "10.2.2.10 controller" >> /etc/hosts
echo "10.2.2.11 compute" >> /etc/hosts
echo "10.2.2.12 block" >> /etc/hosts
echo "10.2.2.13 object1" >> /etc/hosts
echo "10.2.2.14 object2" >> /etc/hosts
reboot

### MariaDB ###
apt-get install -y mariadb-server python-pymysql
cp -v etc/mysql/conf.d/openstack.cnf /etc/mysql/conf.d/openstack.cnf
service mysql restart
mysql -uroot -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('RAHASIA');"
mysql -uroot -pRAHASIA -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
mysql -uroot -pRAHASIA -e "DELETE FROM mysql.user WHERE User='';"
mysql -uroot -pRAHASIA -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';"
mysql -uroot -pRAHASIA -e "FLUSH PRIVILEGES;"

### MongoDB ###
apt-get install -y mongodb-server mongodb-clients python-pymongo
[ ! -f /etc/mongodb.conf.orig ] && cp -v /etc/mongodb.conf /etc/mongodb.conf.orig
cp -v etc/mongodb.conf /etc/mongodb.conf
service mongodb stop
rm /var/lib/mongodb/journal/prealloc.*
service mongodb start

### RabbitMQ ###
apt-get install -y rabbitmq-server
rabbitmqctl add_user openstack RAHASIA
rabbitmqctl set_permissions openstack ".*" ".*" ".*"

### Memcached ###
apt-get install -y memcached python-memcache
[ ! -f /etc/memcached.conf.orig ] && cp -v /etc/memcached.conf /etc/memcached.conf.orig
cp -v etc/memcached.conf /etc/memcached.conf
service memcached restart


########## Keystone ##########

### Keystone DB & Config ###
mysql -uroot -pRAHASIA -e "CREATE DATABASE keystone;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'RAHASIA';"
echo "manual" > /etc/init/keystone.override
apt-get install -y keystone apache2 libapache2-mod-wsgi
[ ! -f /etc/keystone/keystone.conf.orig ] && cp -v /etc/keystone/keystone.conf /etc/keystone/keystone.conf.orig
cp -v etc/keystone/keystone.conf /etc/keystone/keystone.conf
su -s /bin/sh -c "keystone-manage db_sync" keystone
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
[ ! -f /etc/apache2/apache2.conf.orig ] && cp -v /etc/apache2/apache2.conf /etc/apache2/apache2.conf.orig
cp -v etc/apache2/apache2.conf /etc/apache2/apache2.conf
cp -v etc/apache2/sites-available/wsgi-keystone.conf etc/apache2/sites-available/wsgi-keystone.conf
service apache2 restart
rm -f /var/lib/keystone/keystone.db

### Service Entity & API Endpoints ###
export OS_TOKEN=6e9276136bccc3c49dec
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
openstack service create --name keystone --description "OpenStack Identity" identity
openstack endpoint create --region RegionOne identity public http://controller:5000/v3
openstack endpoint create --region RegionOne identity internal http://controller:5000/v3
openstack endpoint create --region RegionOne identity admin http://controller:35357/v3

### Domain, projects, users, roles ###
openstack domain create --description "Default Domain" default
openstack project create --domain default --description "Admin Project" admin
openstack user create --domain default --password RAHASIA admin
openstack role create admin
openstack role add --project admin --user admin admin
openstack project create --domain default --description "Service Project" service
openstack role create user
unset OS_TOKEN OS_URL
cp -v root/admin-openrc /root/admin-openrc
. /root/admin-openrc
openstack token issue


########## Glance ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE glance;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA glance
openstack role add --project service --user glance admin
openstack service create --name glance --description "OpenStack Image" image
openstack endpoint create --region RegionOne image public http://controller:9292
openstack endpoint create --region RegionOne image internal http://controller:9292
openstack endpoint create --region RegionOne image admin http://controller:9292
apt-get install -y glance
[ ! -f /etc/glance/glance-api.conf.orig ] && cp -v /etc/glance/glance-api.conf /etc/glance/glance-api.conf.orig
cp -v etc/glance/glance-api.conf /etc/glance/glance-api.conf
[ ! -f /etc/glance/glance-registry.conf.orig ] && cp -v /etc/glance/glance-registry.conf /etc/glance/glance-registry.conf.orig
cp -v etc/glance/glance-registry.conf /etc/glance/glance-registry.conf
su -s /bin/sh -c "glance-manage db_sync" glance
service glance-registry restart
service glance-api restart
. /root/admin-openrc
wget -c http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
openstack image create "cirros" --file cirros-0.3.4-x86_64-disk.img --disk-format qcow2 --container-format bare --public
openstack image list


########## Nova ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE nova_api;"
mysql -uroot -pRAHASIA -e "CREATE DATABASE nova;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA nova
openstack role add --project service --user nova admin
openstack service create --name nova --description "OpenStack Compute" compute
openstack endpoint create --region RegionOne compute public http://controller:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1/%\(tenant_id\)s
apt-get install -y nova-api nova-conductor nova-consoleauth nova-novncproxy nova-scheduler
[ ! -f /etc/nova/nova.conf.orig ] && cp -v /etc/nova/nova.conf /etc/nova/nova.conf.orig
cp -v etc/nova/nova.conf /etc/nova/nova.conf
su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova
service nova-api restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart
. /root/admin-openrc
openstack compute service list

#############################################################
########## Lanjut Konfigurasi Nova di Node Compute ############
#############################################################


########## Neutron ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE neutron;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA neutron
openstack role add --project service --user neutron admin
openstack service create --name neutron --description "OpenStack Networking" network
openstack endpoint create --region RegionOne network public http://controller:9696
openstack endpoint create --region RegionOne network internal http://controller:9696
openstack endpoint create --region RegionOne network admin http://controller:9696
apt-get install -y neutron-server neutron-plugin-ml2 neutron-linuxbridge-agent neutron-l3-agent neutron-dhcp-agent neutron-metadata-agent
[ ! -f /etc/neutron/neutron.conf.orig ] && cp -v /etc/neutron/neutron.conf /etc/neutron/neutron.conf.orig
cp -v etc/neutron/neutron.conf /etc/neutron/neutron.conf
[ ! -f /etc/neutron/plugins/ml2/ml2_conf.ini.orig ] && cp -v /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini.orig
cp -v etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini
[ ! -f /etc/neutron/plugins/ml2/linuxbridge_agent.ini.orig ] && cp -v /etc/neutron/plugins/ml2/linuxbridge_agent.ini /etc/neutron/plugins/ml2/linuxbridge_agent.ini.orig
cp -v etc/neutron/plugins/ml2/linuxbridge_agent.ini /etc/neutron/plugins/ml2/linuxbridge_agent.ini
[ ! -f /etc/neutron/l3_agent.ini.orig ] && cp -v /etc/neutron/l3_agent.ini /etc/neutron/l3_agent.ini.orig
cp -v etc/neutron/l3_agent.ini /etc/neutron/l3_agent.ini
[ ! -f /etc/neutron/dhcp_agent.ini.orig ] && cp -v /etc/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini.orig
cp -v etc/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini
[ ! -f /etc/neutron/metadata_agent.ini.orig ] && cp -v /etc/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini.orig
cp -v etc/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
service nova-api restart
service neutron-server restart
service neutron-linuxbridge-agent restart
service neutron-dhcp-agent restart
service neutron-metadata-agent restart
service neutron-l3-agent restart
. /root/admin-openrc
neutron ext-list
neutron agent-list

################################################################
########## Lanjut Konfigurasi Neutron di Node Compute ############
################################################################


########## Horizon ##########
apt-get install -y openstack-dashboard
[ ! -f /etc/openstack-dashboard/local_settings.py.orig ] && cp -v /etc/openstack-dashboard/local_settings.py /etc/openstack-dashboard/local_settings.py.orig
cp -v etc/openstack-dashboard/local_settings.py /etc/openstack-dashboard/local_settings.py
service apache2 restart

###################################################################################
########## Akses Horizon dengan Web Browser: http://192.168.1.200/horizon/ ############
###################################################################################


########## Launch Instance Lewat Horizon ##########

### Menu Admin - System ###

1. Membuat network public
Name: net-public
Project: admin
Provider Network Type: Flat
Physical Network: public
Admin State: Up
Shared: Yes
External Network: Yes

2. Membuat subnet public
Subnet Name: subnet-public
Network Address: 172.16.2.0/24
IP Version: IPv4
Gateway IP: 172.16.2.254
Enable DHCP: Yes
Allocation Pools: 172.16.2.100,172.16.2.199
DNS Name Servers: 10.2.2.254

### Menu Project - Network ###

3. Membuat network private
Name: net-private
Admin State: Up
Shared: No
Create Subnet: Yes

4. Membuat subnet private
Subnet Name: subnet-private
Network Address: 192.168.2.0/24
IP Version: IPv4
Gateway IP: 192.168.2.254
Enable DHCP: Yes
Allocation Pools: 192.168.2.100,192.168.2.199
DNS Name Servers: 10.2.2.254

5. Membuat router
Router Name: router0
Admin State: Up
External Network: net-public
Add interface
Subnet: subnet-private

### Menu Project - Compute ###

6. Unggah Image cirros
Name: cirros
Image Source: Image Location
Image Location: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
Format: QCOW2

7. Create/Import Key Pair
Key Pair Name: key-admin

8. Launch Instance
Instance Name: instance0
Source Image: cirros
Flavor: m1.tiny
Network: net-private
Key Pair: key-admin
Akses console dan ping ke 172.16.2.254

9. Floating IP
Access & Security > Floating IPs > Allocate IP To Project > Allocate IP
Instances > Associate Floating IP > Associate

10. Security Group
Allow SSH & ICMP
Ping dari host ke alamat IP float instance0 (172.16.2.1XX)
SSH dari host ke alamat IP float instance0 (172.16.2.1XX)


########## Heat ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE heat;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA heat
openstack role add --project service --user heat admin
openstack service create --name heat --description "Orchestration" orchestration
openstack service create --name heat-cfn --description "Orchestration"  cloudformation
openstack endpoint create --region RegionOne orchestration public http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne orchestration internal http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne orchestration admin http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne cloudformation public http://controller:8000/v1
openstack endpoint create --region RegionOne cloudformation internal http://controller:8000/v1
openstack endpoint create --region RegionOne cloudformation admin http://controller:8000/v1
openstack domain create --description "Stack projects and users" heat
openstack user create --domain heat --password RAHASIA heat_domain_admin
openstack role add --domain heat --user-domain heat --user heat_domain_admin admin
openstack role create heat_stack_owner
openstack role add --project admin --user admin heat_stack_owner
openstack role create heat_stack_user
apt-get install -y heat-api heat-api-cfn heat-engine
[ ! -f /etc/heat/heat.conf.orig ] && cp -v /etc/heat/heat.conf /etc/heat/heat.conf.orig
cp -v etc/heat/heat.conf /etc/heat/heat.conf
su -s /bin/sh -c "heat-manage db_sync" heat
service heat-api restart
service heat-api-cfn restart
service heat-engine restart
. /root/admin-openrc
openstack orchestration service list

cp -v root/admin-template.yml /root/admin-template.yml
openstack network list
export NET_ID=$(openstack network list | awk '/ net-public / { print $2 }')
openstack stack create -t admin-template.yml --parameter "NetID=$NET_ID" stack
openstack stack list
openstack stack output show --all stack
openstack server list
openstack stack delete --yes stack


########## Ceilometer ##########
mongo --host controller --eval 'db = db.getSiblingDB("ceilometer"); db.addUser({user: "ceilometer",pwd: "RAHASIA",roles: [ "readWrite", "dbAdmin" ]})'
. /root/admin-openrc
openstack user create --domain default --password RAHASIA ceilometer
openstack role add --project service --user ceilometer admin
openstack service create --name ceilometer --description "Telemetry" metering
openstack endpoint create --region RegionOne metering public http://controller:8777
openstack endpoint create --region RegionOne metering internal http://controller:8777
openstack endpoint create --region RegionOne metering admin http://controller:8777
apt-get install -y ceilometer-api ceilometer-collector ceilometer-agent-central ceilometer-agent-notification python-ceilometerclient
[ ! -f /etc/ceilometer/ceilometer.conf.orig ] && cp -v /etc/ceilometer/ceilometer.conf /etc/ceilometer/ceilometer.conf.orig
cp -v etc/ceilometer/ceilometer.conf /etc/ceilometer/ceilometer.conf
service ceilometer-agent-central restart
service ceilometer-agent-notification restart
service ceilometer-api restart
service ceilometer-collector restart
. /root/admin-openrc
ceilometer meter-list
IMAGE_ID=$(glance image-list | grep 'cirros' | awk '{ print $2 }')
glance image-download $IMAGE_ID > /tmp/cirros.img
ceilometer meter-list
ceilometer statistics -m image.download -p 60
rm /tmp/cirros.img

### aodh ###
mysql -uroot -pRAHASIA -e "CREATE DATABASE aodh;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON aodh.* TO 'aodh'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON aodh.* TO 'aodh'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA aodh
openstack role add --project service --user aodh admin
openstack service create --name aodh --description "Telemetry" alarming
openstack endpoint create --region RegionOne alarming public http://controller:8042
openstack endpoint create --region RegionOne alarming internal http://controller:8042
openstack endpoint create --region RegionOne alarming admin http://controller:8042
apt-get install -y aodh-api aodh-evaluator aodh-notifier aodh-listener aodh-expirer python-ceilometerclient
[ ! -f /etc/aodh/aodh.conf.orig ] && cp -v /etc/aodh/aodh.conf /etc/aodh/aodh.conf.orig
cp -v etc/aodh/aodh.conf /etc/aodh/aodh.conf
[ ! -f /etc/aodh/api_paste.ini.orig ] && cp -v /etc/aodh/api_paste.ini /etc/aodh/api_paste.ini.orig
cp -v etc/aodh/api_paste.ini /etc/aodh/api_paste.ini
service aodh-api restart
service aodh-evaluator restart
service aodh-notifier restart
service aodh-listener restart

###################################################################
########## Lanjut Konfigurasi Ceilometer di Node Compute ############
###################################################################


########## Cinder ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE cinder;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA cinder
openstack role add --project service --user cinder admin
openstack service create --name cinder --description "OpenStack Block Storage" volume
openstack service create --name cinderv2 --description "OpenStack Block Storage" volumev2
openstack endpoint create --region RegionOne volume public http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volume internal http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volume admin http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(tenant_id\)s
apt-get install -y cinder-api cinder-scheduler
[ ! -f /etc/cinder/cinder.conf.orig ] && cp -v /etc/cinder/cinder.conf /etc/cinder/cinder.conf.orig
cp -v etc/cinder/cinder.conf /etc/cinder/cinder.conf
su -s /bin/sh -c "cinder-manage db sync" cinder
service cinder-scheduler restart
service cinder-api restart
. /root/admin-openrc
cinder service-list

#############################################################
########## Lanjut Konfigurasi Cinder di Node Block ############
#############################################################


########## Manila ##########
mysql -uroot -pRAHASIA -e "CREATE DATABASE manila;"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON manila.* TO 'manila'@'localhost' IDENTIFIED BY 'RAHASIA';"
mysql -uroot -pRAHASIA -e "GRANT ALL PRIVILEGES ON manila.* TO 'manila'@'%' IDENTIFIED BY 'RAHASIA';"
. /root/admin-openrc
openstack user create --domain default --password RAHASIA manila
openstack role add --project service --user manila admin
openstack service create --name manila --description "OpenStack Shared File Systems" share
openstack service create --name manilav2 --description "OpenStack Shared File Systems" sharev2
openstack endpoint create --region RegionOne share public http://controller:8786/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne share internal http://controller:8786/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne share admin http://controller:8786/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne sharev2 public http://controller:8786/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne sharev2 internal http://controller:8786/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne sharev2 admin http://controller:8786/v2/%\(tenant_id\)s
apt-get install -y manila-api manila-scheduler python-manilaclient
[ ! -f /etc/manila/manila.conf.orig ] && cp -v /etc/manila/manila.conf /etc/manila/manila.conf.orig
cp -v etc/manila/manila.conf /etc/manila/manila.conf
su -s /bin/sh -c "manila-manage db sync" manila
service manila-scheduler restart
service manila-api restart

#############################################################
########## Lanjut Konfigurasi Manila di Node Block ############
#############################################################

. /root/admin-openrc
manila service-list
wget -c http://tarballs.openstack.org/manila-image-elements/images/manila-service-image-master.qcow2
openstack image create "manila-service-image" --file manila-service-image-master.qcow2 --disk-format qcow2 --container-format bare --public
openstack flavor create manila-service-flavor --id 100 --ram 256 --disk 0 --vcpus 1
neutron net-list
openstack server create --flavor manila-service-flavor --image manila-service-image --nic net-id=PRIVATE_NET_ID --security-group default manila
openstack ip floating create net-public
openstack ip floating add 172.16.2.XXX manila
manila type-create default_share_type False
manila type-list
manila create NFS 1 --name share1
manila list
manila show share1
manila access-allow share1 ip INSTANCE_FLOATING_IP_ADDRESS

---Akses Ke Instance manila--- 
##Login into the instance using manila as the username and password.
mkdir ~/test_folder
sudo mount -t nfs 10.2.2.12:/var/lib/manila/mnt/share-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ~/test_folder


########## Swift ##########
. /root/admin-openrc
openstack user create --domain default --password RAHASIA swift
openstack role add --project service --user swift admin
openstack service create --name swift --description "OpenStack Object Storage" object-store
openstack endpoint create --region RegionOne object-store public http://controller:8080/v1/AUTH_%\(tenant_id\)s
openstack endpoint create --region RegionOne object-store internal http://controller:8080/v1/AUTH_%\(tenant_id\)s
openstack endpoint create --region RegionOne object-store admin http://controller:8080/v1
apt-get install -y swift swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware memcached
mkdir -p /etc/swift
[ ! -f /etc/swift/proxy-server.conf.orig ] && cp -v /etc/swift/proxy-server.conf /etc/swift/proxy-server.conf.orig
cp -v etc/swift/proxy-server.conf /etc/swift/proxy-server.conf

########################################################################
########## Lanjut Konfigurasi Swift di Node object1 & object2 ############
########################################################################

cd /etc/swift
swift-ring-builder account.builder create 10 3 1
swift-ring-builder account.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6002 --device sdb --weight 100
swift-ring-builder account.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6002 --device sdc --weight 100
swift-ring-builder account.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6002 --device sdb --weight 100
swift-ring-builder account.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6002 --device sdc --weight 100
swift-ring-builder account.builder
swift-ring-builder account.builder rebalance
swift-ring-builder container.builder create 10 3 1
swift-ring-builder container.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6001 --device sdb --weight 100
swift-ring-builder container.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6001 --device sdc --weight 100
swift-ring-builder container.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6001 --device sdb --weight 100
swift-ring-builder container.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6001 --device sdc --weight 100
swift-ring-builder container.builder
swift-ring-builder container.builder rebalance
swift-ring-builder object.builder create 10 3 1
swift-ring-builder object.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6000 --device sdb --weight 100
swift-ring-builder object.builder add --region 1 --zone 1 --ip 10.2.2.13 --port 6000 --device sdc --weight 100
swift-ring-builder object.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6000 --device sdb --weight 100
swift-ring-builder object.builder add --region 1 --zone 2 --ip 10.2.2.14 --port 6000 --device sdc --weight 100
swift-ring-builder object.builder
swift-ring-builder object.builder rebalance
cd ~

scp /etc/swift/*.gz 10.2.2.13:/etc/swift/

scp /etc/swift/*.gz 10.2.2.14:/etc/swift/

cp -v etc/swift/swift.conf etc/swift/swift.conf

scp /etc/swift/swift.conf 10.2.2.13:/etc/swift/swift.conf

scp /etc/swift/swift.conf 10.2.2.14:/etc/swift/swift.conf

chown -R root:swift /etc/swift

ssh -l root 10.2.2.13 "chown -R root:swift /etc/swift"

ssh -l root 10.2.2.14 "chown -R root:swift /etc/swift"

service memcached restart
service swift-proxy restart
swift-init all start

ssh -l root 10.2.2.13 "swift-init all start"

ssh -l root 10.2.2.14 "swift-init all start"

. /root/admin-openrc
swift stat
echo "test file1" > file1
openstack container create container1
openstack object create container1 file1
openstack object list container1
rm file1
openstack object save container1 file1
ls
cat file1
